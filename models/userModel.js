const mongoose = require('mongoose')
const bcrypt=require('bcrypt')
const userSchema = new mongoose.Schema({
    //the id is automatically generated by mongoose
    name: {type:String,require:true},
    email: String,
    password: {type:String,require:true,
        //validate: {
            //validator: function(value) {
              //  return /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)(?=.*[\W_]).{8,}$/.test(value); //pour v√©rifier si le mdp miniscul, majiscul ,contient des nbrs
            //},
            //message:
                //"Password must be at least 8 characters, including uppercase, lowercase, number and special character
       // }
    },
    image_user :{type : String , default:"client.png"},

    ///teacher
    languages:[{type:String}],
    coursesList : [{type:mongoose.Schema.Types.ObjectId,ref:"Course"}],
    availability: String,
    //learner
    preferredLanguages : [{type: String}],    
    role : {type: String,
        enum : ['learner','admin','teacher']
    },
    //payment foreign key with the learner
    paymentsId : [{type:mongoose.Schema.Types.ObjectId,ref:"Payment"}]

   
},{timestamps:true})
//9bal l action save aml hashage 
userSchema.pre("save",async function(next){ // next t5alyk tet3ada l bloc eli ba3dou 
    try{
        const User = this;
        const salt = await bcrypt.genSalt();// await 5ater hatyna async fl fct
        User.password= await bcrypt.hash(User.password,salt)
        next()
    }catch (error){
        next(error)

    }
})

const User = mongoose.model("User",userSchema) // creation du model ml schema
module.exports = User